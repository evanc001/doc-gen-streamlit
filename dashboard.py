"""
–ú–æ–¥—É–ª—å dashboard —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞
–≤ Streamlit‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏. –î–∞—à–±–æ—Ä–¥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
–ø–æ —Å–¥–µ–ª–∫–∞–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Excel‚Äë—Ñ–∞–π–ª–∞,
–ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ Google Sheets –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –≤—Ä—É—á–Ω—É—é.

–§—É–Ω–∫—Ü–∏—è ``display_dashboard`` –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å,
–ø–æ–∑–≤–æ–ª—è—é—â–∏–π –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª, –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –∏ —É–≤–∏–¥–µ—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ
–ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –¥–ª—è –ª—É—á—à–µ–π
–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–¥–∞.
"""

from __future__ import annotations

import datetime
from typing import Optional

import streamlit as st
import pandas as pd

from data_utils import (
    load_dictionaries,
    load_sheet_data,
    parse_transport_table,
)


def _inject_custom_style() -> None:
    """–í—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ CSS‚Äë—Å—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞.

    –ò–∑–º–µ–Ω—è–µ—Ç –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∫–∞—Ä—Ç–æ—á–µ–∫, —Ç–∞–±–ª–∏—Ü –∏ —Ñ–æ–Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤,
    —á—Ç–æ–±—ã –ø—Ä–∏–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –≤–∏–¥.
    """
    st.markdown(
        """
        <style>
        /* –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–æ–Ω –∏ —à—Ä–∏—Ñ—Ç—ã */
        body {
            font-family: "Segoe UI", "Helvetica Neue", sans-serif;
        }
        /* –ú–µ—Ç—Ä–∏–∫–∏ */
        .stMetric {
            background-color: #f7f7f9;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
        h2, h3, h4 {
            color: #333333;
        }
        /* –¢–∞–±–ª–∏—Ü–∞ */
        .stDataFrame table {
            border-collapse: collapse;
        }
        .stDataFrame th, .stDataFrame td {
            padding: 8px 12px;
            border: 1px solid #e6e6e6;
        }
        /* –ö—Ä–∞—Å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π */
        .danger {
            color: #c0392b;
        }
        </style>
        """,
        unsafe_allow_html=True
    )


def display_dashboard(sheet_id: Optional[str] = None) -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞—à–±–æ—Ä–¥ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ Streamlit.

    Args:
        sheet_id: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Google Sheets. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Å—Å—ã–ª–∫–µ. –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–æ—Å—Ç—É–ø–∞
            –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –≤—Ä—É—á–Ω—É—é.
    """
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å
    _inject_custom_style()
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.subheader("üìä –î–∞—à–±–æ—Ä–¥ –ø–æ —Å–¥–µ–ª–∫–∞–º (–ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü)")
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
    uploaded_file = st.file_uploader(
        "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–µ–∂–∏–π Excel‚Äë—Ñ–∞–π–ª (.xlsx) —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø–æ–ª–µ –ø—É—Å—Ç—ã–º –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏", 
        type=["xlsx"],
        help="–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–∫–∞—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏–∑ Google Sheets –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—ë –∑–¥–µ—Å—å"
    )
    # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    if st.button("üîÅ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        st.session_state['refresh_data'] = True
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—É (—Å–µ–≥–æ–¥–Ω—è) –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∏—Å—Ç–∞
    current_date = datetime.date.today()
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        df_month, df_raw, sheet_name = load_sheet_data(
            file=uploaded_file,
            sheet_id=sheet_id,
            date=current_date,
            prefer_cache=not st.session_state.get('refresh_data', False)
        )
        # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        st.session_state['refresh_data'] = False
    except Exception as exc:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {exc}")
        return
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    clients_dict, _, _, _ = load_dictionaries()
    transport_map = parse_transport_table(df_raw)
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–¥–µ–ª–∫–∏: —É—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –î–°
    df_month = df_month.copy()
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π –∏ –Ω–æ–º–µ—Ä –î–°
    df_month['company_key'] = df_month['–ö–æ–º–ø–∞–Ω–∏—è'].astype(str).str.lower().str.strip()
    # –ù–æ–º–µ—Ä–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    df_month['ds_client'] = pd.to_numeric(df_month['‚Ññ –¥–æ–ø –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç'], errors='coerce')
    df_month['ds_supplier'] = pd.to_numeric(df_month.get('‚Ññ –¥–æ–ø –ø–æ—Å—Ç–∞–≤—â–∏–∫'), errors='coerce')
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∏–ø float –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    df_month['volume'] = pd.to_numeric(df_month['–∫–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω'], errors='coerce')
    df_month['profit'] = pd.to_numeric(df_month['–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏'], errors='coerce')
    # –°–¥–µ–ª–∫–∏ —Å—á–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–æ–∫, –≥–¥–µ —É–∫–∞–∑–∞–Ω –Ω–æ–º–µ—Ä –î–° –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞; –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –∏—Å–∫–ª—é—á–∞—é—Ç—Å—è
    df_deals = df_month[df_month['ds_client'].notna()]
    # –î–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    available_companies = sorted(df_deals['company_key'].unique())
    # –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–º–µ—á–∞–µ–º —Ç–µ, —á—Ç–æ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∫–ª—é—á–∞–º–∏ –∏–∑ clients.json
    default_selected = [c for c in available_companies if c in clients_dict]
    if not default_selected:
        default_selected = available_companies  # –µ—Å–ª–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –Ω–µ—Ç, –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ
    selected_companies = st.multiselect(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞",
        options=available_companies,
        default=default_selected,
        help="–£–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ Ctrl/Cmd –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π."
    )
    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ
    if selected_companies:
        df_deals = df_deals[df_deals['company_key'].isin([c.lower() for c in selected_companies])]
    if df_deals.empty:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü.")
        return
    # –°–ø–∏—Å–∫–∏ –∏ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–≤–æ–¥–æ–∫
    last_ds_records = []  # —Å–ø–∏—Å–æ–∫ {'–ö–æ–º–ø–∞–Ω–∏—è', '–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°'}
    volume_profit_records = []  # —Å–ø–∏—Å–æ–∫ {'–ö–æ–º–ø–∞–Ω–∏—è', '–í—Å–µ–≥–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ, —Ç–Ω', '–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ'}
    delay_records = []  # —Å–ø–∏—Å–æ–∫ {'–ö–æ–º–ø–∞–Ω–∏—è', '‚Ññ –î–°', '–û—Ç—Å—Ä–æ—á–∫–∞, –¥–Ω'}
    missing_driver_records = []  # —Å–ø–∏—Å–æ–∫ {'–ö–æ–º–ø–∞–Ω–∏—è', '‚Ññ –î–°', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ç–Ω', '–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ'}
    total_volume = 0.0
    total_profit = 0.0
    # –°–æ–±–∏—Ä–∞–µ–º —Ñ–∞–º–∏–ª–∏–∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –æ–±—â–∏—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
    surnames_in_deals = set()
    for _, row in df_deals.iterrows():
        drv_info = row.get('–î–∞–Ω–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª—è, –∞/–º, –ø/–ø –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è')
        if isinstance(drv_info, str) and drv_info.strip():
            surnames_in_deals.add(drv_info.strip().split()[0].lower())
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –ø–æ –≤—Å–µ–º —Å–¥–µ–ª–∫–∞–º
    transport_total = sum(transport_map.get(s, 0.0) for s in surnames_in_deals)
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º
    for comp_key in sorted(df_deals['company_key'].unique()):
        comp_df = df_deals[df_deals['company_key'] == comp_key]
        # –ü–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä –î–°
        try:
            last_ds = int(comp_df['ds_num'].max())
        except Exception:
            last_ds = None
        vol_sum = comp_df['volume'].fillna(0).sum()
        prof_sum = comp_df['profit'].fillna(0).sum()
        total_volume += vol_sum
        total_profit += prof_sum
        last_ds_records.append({'–ö–æ–º–ø–∞–Ω–∏—è': comp_key, '–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°': last_ds})
        volume_profit_records.append({
            '–ö–æ–º–ø–∞–Ω–∏—è': comp_key,
            '–í—Å–µ–≥–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ, —Ç–Ω': round(vol_sum, 3),
            '–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ': round(prof_sum, 2)
        })
        # –û—Ç—Å—Ä–æ—á–∫–∏
        pending_df = comp_df[(comp_df['–æ—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞, –¥–Ω'].fillna(0) >= 1) & (comp_df['–û–ø–ª–∞—á–µ–Ω–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º'].isna())]
        for _, drow in pending_df.iterrows():
            try:
                delay_days = int(drow['–æ—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞, –¥–Ω'])
            except Exception:
                delay_days = None
            delay_records.append({
                '–ö–æ–º–ø–∞–Ω–∏—è': comp_key,
                '‚Ññ –î–°': int(drow['ds_client']) if pd.notna(drow['ds_client']) else None,
                '–û—Ç—Å—Ä–æ—á–∫–∞, –¥–Ω': delay_days
            })
        # –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–æ–¥–∏—Ç–µ–ª—è
        for _, drow in comp_df.iterrows():
            drv = drow.get('–î–∞–Ω–Ω—ã–µ –≤–æ–¥–∏—Ç–µ–ª—è, –∞/–º, –ø/–ø –∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è')
            if not isinstance(drv, str) or not drv.strip():
                missing_driver_records.append({
                    '–ö–æ–º–ø–∞–Ω–∏—è': comp_key,
                    '‚Ññ –î–°': int(drow['ds_client']) if pd.notna(drow['ds_client']) else None,
                    '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ç–Ω': round(float(drow['volume']) if pd.notna(drow['volume']) else 0.0, 3),
                    '–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ': round(float(drow['profit']) if pd.notna(drow['profit']) else 0.0, 2)
                })
    # –í—ã–≤–æ–¥ –º–µ—Ç—Ä–∏–∫
    col1, col2, col3 = st.columns(3)
    col1.metric("–í—Å–µ–≥–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ, —Ç–Ω", f"{round(total_volume, 3)}")
    col2.metric("–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ", f"{round(total_profit, 2):.2f}")
    col3.metric("–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã", f"{round(transport_total, 2):.2f}")
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –î–°
    st.markdown("#### üî¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ–ø. —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º")
    df_last_ds = pd.DataFrame(last_ds_records).sort_values(by='–ö–æ–º–ø–∞–Ω–∏—è').reset_index(drop=True)
    st.table(df_last_ds)
    # –¢–∞–±–ª–∏—Ü–∞ —Å—É–º–º–∞—Ä–Ω—ã—Ö –æ–±—ä—ë–º–æ–≤ –∏ –ø—Ä–∏–±—ã–ª–∏
    st.markdown("#### üì¶ –û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º")
    df_vol_prof = pd.DataFrame(volume_profit_records).sort_values(by='–í—Å–µ–≥–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ, —Ç–Ω', ascending=False).reset_index(drop=True)
    st.table(df_vol_prof)
    # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—Å—Ä–æ—á–µ–∫
    if delay_records:
        st.markdown("#### ‚è≥ –°–¥–µ–ª–∫–∏ —Å –æ—Ç—Å—Ä–æ—á–∫–æ–π –ø–ª–∞—Ç–µ–∂–∞ (–Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ)")
        df_delay = pd.DataFrame(delay_records)
        st.table(df_delay)
    # –¢–∞–±–ª–∏—Ü–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π
    if missing_driver_records:
        st.markdown("#### üö® –°–¥–µ–ª–∫–∏ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –≤–æ–¥–∏—Ç–µ–ª—è")
        df_missing = pd.DataFrame(missing_driver_records)
        # –ü–æ–∫—Ä–∞—Å–∏–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—å, –∫—Ä–∞—Å–Ω—ã–º —Ü–≤–µ—Ç–æ–º
        df_missing_display = df_missing.copy()
        # –î–æ–±–∞–≤–ª—è–µ–º HTML –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä
        def _style_driver(val):
            return f"<span style='color:#c0392b;font-weight:bold;'>{val}</span>"
        df_missing_display['–ö–æ–º–ø–∞–Ω–∏—è'] = df_missing_display['–ö–æ–º–ø–∞–Ω–∏—è'].apply(lambda x: f"<span style='color:#c0392b;'>{x}</span>")
        df_missing_display['‚Ññ –î–°'] = df_missing_display['‚Ññ –î–°'].apply(lambda x: f"<span style='color:#c0392b;'>{x}</span>")
        df_missing_display['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ç–Ω'] = df_missing_display['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ç–Ω'].apply(lambda x: f"<span style='color:#c0392b;'>{x}</span>")
        df_missing_display['–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ'] = df_missing_display['–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ'].apply(lambda x: f"<span style='color:#c0392b;'>{x}</span>")
        st.markdown(df_missing_display.to_html(escape=False, index=False), unsafe_allow_html=True)