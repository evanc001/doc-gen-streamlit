"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å Streamlit‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Ä–µ–∞–ª–∏–∑—É–µ—Ç –¥–∞—à–±–æ—Ä–¥ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —Ç–æ–ø–ª–∏–≤–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç
–≤—ã–±—Ä–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö ‚Äî –ª–∏–±–æ —É–∫–∞–∑–∞—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Google Sheets
—Ç–∞–±–ª–∏—Ü—ã, –ª–∏–±–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π Excel‚Äë—Ñ–∞–π–ª. –î–ª—è —á—Ç–µ–Ω–∏—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö
—Ç–∞–±–ª–∏—Ü –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è ``load_sheet_data`` –∏–∑ ``data_utils``,
–∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç Google.

–¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π,
–∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –∑–∞ –¢–∏–º—É—Ä–æ–º. –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ —Ñ–∞–π–ª–µ
``timur_clients.json`` –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π ``edit_clients``
–∏–∑ –º–æ–¥—É–ª—è ``clients_manager``.
"""

from __future__ import annotations

import streamlit as st
import pandas as pd
import numpy as np
from typing import Optional

from data_utils import load_sheet_data
from clients_manager import edit_clients


def _select_company_column(df: pd.DataFrame) -> Optional[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.

    –í –∏—Å—Ö–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –∫–æ–ª–æ–Ω–∫–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º/–∫–æ–º–ø–∞–Ω–∏–µ–π –º–æ–∂–µ—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è
    –ø–æ‚Äë—Ä–∞–∑–Ω–æ–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–ö–æ–º–ø–∞–Ω–∏—è¬ª, ¬´–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç¬ª, ¬´–ö–ª–∏–µ–Ω—Ç¬ª –∏–ª–∏ –¥–∞–∂–µ
    —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–µ—Å—è—Ü, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω). –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è
    –∏—â–µ—Ç –ø–µ—Ä–≤–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ä–µ–≥–∏—Å—Ç—Ä –∏
    –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã. –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∞—è –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None.
    """
    keywords = [
        "–∫–æ–º–ø–∞–Ω–∏—è",
        "–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç",
        "–∫–ª–∏–µ–Ω—Ç",
        "customer",
        "client",
    ]
    for col in df.columns:
        col_norm = str(col).strip().lower()
        for kw in keywords:
            if kw in col_norm:
                return col
    return None


def display_dashboard() -> None:
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞—à–±–æ—Ä–¥–∞."""
    st.set_page_config(page_title="–î–∞—à–±–æ—Ä–¥ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º", layout="wide")
    st.title("üìä –î–∞—à–±–æ—Ä–¥ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —Ç–æ–ø–ª–∏–≤–∞")

    st.sidebar.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")

    # –ë–ª–æ–∫ –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    st.sidebar.subheader("–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")
    sheet_id_default: str = ""
    # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ secrets (–µ—Å–ª–∏
    # –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∫–∞–∑–∞–ª ID —Ç–∞–±–ª–∏—Ü—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏).
    try:
        sheet_id_default = str(st.secrets.get("default_sheet_id", ""))
    except Exception:
        sheet_id_default = ""

    sheet_id = st.sidebar.text_input(
        "ID Google Sheets", value=sheet_id_default,
        help=(
            "–£–∫–∞–∂–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä Google Sheets. –¢–∞–±–ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "
            "–¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏–±–æ –ø—É–±–ª–∏—á–Ω–æ, –ª–∏–±–æ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, "
            "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ —Å–µ–∫—Ü–∏–∏ secrets."
        ),
    )
    uploaded_file = st.sidebar.file_uploader(
        "–ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ Excel‚Äë—Ñ–∞–π–ª", type=["xlsx", "xlsm", "xls"],
    )

    # –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –¥–ª—è –¢–∏–º—É—Ä–∞
    timur_clients = edit_clients()

    st.markdown("---")
    st.info("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞‚Ä¶")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —É—á—ë—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    try:
        if uploaded_file is not None:
            df_month, df_raw, sheet_name = load_sheet_data(file=uploaded_file)
        elif sheet_id:
            df_month, df_raw, sheet_name = load_sheet_data(sheet_id=sheet_id)
        else:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID Google Sheets –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª.")
            return
        st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –ª–∏—Å—Ç: {sheet_name}")
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return

    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º, –ø—Ä–∏–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫ –∫ –µ–¥–∏–Ω–æ–º—É –≤–∏–¥—É
    df = df_month.copy()
    df.columns = df.columns.str.strip()

    company_col = _select_company_column(df)
    if company_col is None:
        st.error(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–æ–ª–±–µ—Ü —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–æ–º–ø–∞–Ω–∏–∏. "
            "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç–∞ "
            "(–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ö–æ–º–ø–∞–Ω–∏—è', '–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç', '–ö–ª–∏–µ–Ω—Ç')."
        )
        return

    # –°–æ–∑–¥–∞—ë–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å —Å–ø–∏—Å–∫–æ–º –∫–æ–º–ø–∞–Ω–∏–π
    df["–ö–æ–º–ø–∞–Ω–∏—è"] = df[company_col].astype(str).str.strip()
    df["company_key"] = df["–ö–æ–º–ø–∞–Ω–∏—è"].str.lower()
    df_filtered = df[df["company_key"].isin(timur_clients)]

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    total_volume = df_filtered.get("–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω", pd.Series(dtype=float)).sum()
    total_profit = df_filtered.get("–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏", pd.Series(dtype=float)).sum()
    transport_expenses = df_filtered.get("—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", pd.Series(dtype=float)).sum()

    c1, c2, c3 = st.columns(3)
    c1.metric(
        "–í—Å–µ–≥–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–æ, —Ç–Ω",
        f"{total_volume:,.3f}".replace(",", " ") if not pd.isna(total_volume) else "-",
    )
    c2.metric(
        "–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ",
        f"{total_profit:,.0f}".replace(",", " ") if not pd.isna(total_profit) else "-",
    )
    c3.metric(
        "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã",
        f"{transport_expenses:,.0f}".replace(",", " ") if not pd.isna(transport_expenses) else "-",
    )

    st.markdown("---")
    st.subheader("üî¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –¥–æ–ø. —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º")
    ds_col = "‚Ññ –¥–æ–ø –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç"
    if ds_col in df_filtered.columns:
        last_ds = (
            df_filtered.groupby("–ö–æ–º–ø–∞–Ω–∏—è")[ds_col].max().reset_index().rename(
                columns={ds_col: "–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°"}
            )
        )
        # –ü—Ä–∏–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä–∞ –∫ —Ü–µ–ª–æ–º—É —Ç–∏–ø—É, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
        last_ds["–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°"] = last_ds["–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°"].apply(
            lambda x: int(x) if pd.notna(x) and str(x).isdigit() else np.nan
        )
        last_ds = last_ds.dropna(subset=["–ü–æ—Å–ª–µ–¥–Ω–∏–π ‚Ññ –î–°"])
        with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å / —Å–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É"):
            st.dataframe(last_ds, hide_index=True)
    else:
        st.info("–ù–µ—Ç —Å—Ç–æ–ª–±—Ü–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–æ–ø. —Å–æ–≥–ª–∞—à–µ–Ω–∏–π.")

    st.subheader("üì¶ –û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º")
    cols_needed = {"–ö–æ–º–ø–∞–Ω–∏—è", "–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω", "–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏"}
    if cols_needed.issubset(set(df_filtered.columns)):
        total_by_company = (
            df_filtered.groupby("–ö–æ–º–ø–∞–Ω–∏—è")[
                ["–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω", "–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏"]
            ]
            .sum()
            .reset_index()
        )
        total_by_company = total_by_company[
            (total_by_company["–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω"] > 0)
            | (total_by_company["–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏"] > 0)
        ]
        total_by_company["–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω"] = total_by_company[
            "–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω"
        ].round(3)
        total_by_company["–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏"] = total_by_company[
            "–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏"
        ].round(0)
        with st.expander("–ü–æ–∫–∞–∑–∞—Ç—å / —Å–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É"):
            st.dataframe(total_by_company, hide_index=True)
    else:
        st.info(
            "–ù–µ –Ω–∞–π–¥–µ–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –æ–±—â–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π "
            "(—Ç—Ä–µ–±—É—é—Ç—Å—è '–ö–æ–ª-–≤–æ –æ—Ç–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ, —Ç–Ω' –∏ '–ò—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏')."
        )

    st.subheader("üí∏ –î–æ–ª–∂–Ω–∏–∫–∏")
    debt_col = "–¥–æ–ª–≥"
    if debt_col in df_filtered.columns:
        debts = df_filtered.groupby("–ö–æ–º–ø–∞–Ω–∏—è")[debt_col].sum().reset_index()
        debts = debts[debts[debt_col] > 0]
        debts = debts.rename(columns={debt_col: "–°—É–º–º–∞ –¥–æ–ª–≥–∞"})
        st.dataframe(debts, hide_index=True)
    else:
        st.info(
            "–°—Ç–æ–ª–±–µ—Ü '–¥–æ–ª–≥' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî —Ç–∞–±–ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞."
        )

    st.markdown("---")
    st.caption("üîÑ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é –∏–∑ Google Sheets –∏–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.")


if __name__ == "__main__":
    display_dashboard()