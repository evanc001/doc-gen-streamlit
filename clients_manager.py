"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–ø–∞–Ω–∏–π, –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –∑–∞ –¢–∏–º—É—Ä–æ–º.

–§—É–Ω–∫—Ü–∏–∏ –≤ —ç—Ç–æ–º –º–æ–¥—É–ª–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞,
–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑
Streamlit, –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ JSON. –°–ø–∏—Å–æ–∫ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤
—Ñ–∞–π–ª–µ ``timur_clients.json`` –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import json
import streamlit as st
from pathlib import Path
from typing import List

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π
# –ø—É—Ç—å, —á—Ç–æ–±—ã —Ñ–∞–π–ª –ª–µ–∂–∞–ª —Ä—è–¥–æ–º —Å –∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
CLIENTS_FILE = Path("timur_clients.json")


def load_clients() -> List[str]:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ JSON.

    Returns:
        List[str]: —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–π –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
    """
    if CLIENTS_FILE.exists():
        try:
            with open(CLIENTS_FILE, "r", encoding="utf-8") as f:
                data = json.load(f)
            if isinstance(data, list):
                return data
        except Exception:
            pass
    return []


def save_clients(clients: List[str]) -> None:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –≤ JSON‚Äë—Ñ–∞–π–ª.

    Args:
        clients: —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
    """
    try:
        with open(CLIENTS_FILE, "w", encoding="utf-8") as f:
            json.dump(clients, f, ensure_ascii=False, indent=2)
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–π: {e}")


def edit_clients() -> List[str]:
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤.

    –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π,
    –∑–∞–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –∑–∞ –¢–∏–º—É—Ä–æ–º. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è
    –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.

    Returns:
        List[str]: —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–æ–º–ø–∞–Ω–∏–π –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
    """
    st.subheader("üßæ –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –¢–∏–º—É—Ä–∞")
    clients = load_clients()
    default_text = "\n".join(clients) if clients else ""

    edited_text = st.text_area(
        "–†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π (–ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ):",
        value=default_text,
        height=200,
        key="clients_editor",
    )

    col1, col2 = st.columns([1, 2])
    with col1:
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"):
            new_list = [c.strip().lower() for c in edited_text.split("\n") if c.strip()]
            save_clients(new_list)
            st.success("‚úÖ –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –æ–±–Ω–æ–≤–ª—ë–Ω!")

    with col2:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞"):
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            refreshed = load_clients()
            updated_text = "\n".join(refreshed) if refreshed else ""
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º session_state, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ text_area
            st.session_state["clients_editor"] = updated_text
            st.success("‚úÖ –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞")

    return load_clients()