"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ó–¥–µ—Å—å –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è
–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –∏ –¥–∞—à–±–æ—Ä–¥. –ö–æ–¥ —Ä–∞–∑–¥–µ–ª—ë–Ω
–Ω–∞ –≤–∫–ª–∞–¥–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É
—Å–æ–∑–¥–∞–Ω–∏–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–æ–º –¥–∞–Ω–Ω—ã—Ö.

–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è
``generate_document`` –∏–∑ ``generator_utils``. –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ‚Äî ``display_dashboard`` –∏–∑ ``dashboard``.
"""

from __future__ import annotations

import datetime
import streamlit as st

from generator_utils import generate_document, BASISES
from data_utils import load_dictionaries
from dashboard import display_dashboard


def run_app() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Streamlit."""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.set_page_config(page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ø. —Å–æ–≥–ª–∞—à–µ–Ω–∏–π", layout="wide")
    # –ò–Ω—ä–µ–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ç–∏–ª–µ–π (–æ–±—â–∏—Ö –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.markdown("""<h1 style='text-align:center;'>üìù –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏</h1>""", unsafe_allow_html=True)
    st.markdown("""<p style='text-align:center;color:gray;'>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Å–¥–µ–ª–∫–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ</p>""", unsafe_allow_html=True)
    st.markdown("---")
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π
    clients, products, locations, neftebazy = load_dictionaries()
    # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –¥–∞—à–±–æ—Ä–¥–∞
    tab_gen, tab_dash = st.tabs(["–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä", "–î–∞—à–±–æ—Ä–¥"])
    with tab_gen:
        st.subheader("üìÑ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π")
        st.write("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç. –§–æ—Ä–º–∞—Ç –ø–æ–ª–µ–π –æ–ø–∏—Å–∞–Ω –≤ –ø–æ–¥—Å–∫–∞–∑–∫–∞—Ö.")
        # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        with st.sidebar:
            st.header("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
            if clients:
                st.subheader("–ö–æ–º–ø–∞–Ω–∏–∏")
                for key in sorted(clients.keys()):
                    st.text(f"‚Ä¢ {key}")
            if products:
                st.subheader("–ü—Ä–æ–¥—É–∫—Ç—ã")
                for key in sorted(products.keys()):
                    st.text(f"‚Ä¢ {key}")
            if locations:
                st.subheader("–ë–∞–∑–∏—Å—ã —Å–∞–º–æ–≤—ã–≤–æ–∑–∞")
                for key in sorted(locations.keys()):
                    st.text(f"‚Ä¢ {key}")
            if neftebazy:
                st.subheader("–ù–µ—Ñ—Ç–µ–±–∞–∑—ã")
                for key in sorted(neftebazy.keys()):
                    st.text(f"‚Ä¢ {key}")
        # –§–æ—Ä–º–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        st.markdown("### üìå –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        col1, col2 = st.columns(2)
        with col1:
            document_type = st.radio(
                "–¢–∏–ø –æ–ø–ª–∞—Ç—ã",
                options=["prepayment", "deferment_pay"],
                format_func=lambda x: "–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞" if x == "prepayment" else "–û—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞",
                index=0,
                horizontal=True
            )
        with col2:
            pay_date = st.date_input(
                "–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã",
                value=datetime.date.today(),
                help="–£–∫–∞–∂–∏—Ç–µ –ø–ª–∞–Ω–æ–≤—É—é –¥–∞—Ç—É –æ–ø–ª–∞—Ç—ã"
            )
        st.markdown("### üöö –°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏")
        delivery_method = st.radio(
            "–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏",
            options=["—Å–∞–º–æ–≤—ã–≤–æ–∑", "–¥–æ—Å—Ç–∞–≤–∫–∞", "–Ω–µ—Ñ—Ç–µ–±–∞–∑–∞"],
            format_func=lambda x: {"—Å–∞–º–æ–≤—ã–≤–æ–∑": "–°–∞–º–æ–≤—ã–≤–æ–∑", "–¥–æ—Å—Ç–∞–≤–∫–∞": "–î–æ—Å—Ç–∞–≤–∫–∞", "–Ω–µ—Ñ—Ç–µ–±–∞–∑–∞": "–ù–µ—Ñ—Ç–µ–±–∞–∑–∞"}[x],
            index=0,
            horizontal=True
        )
        pickup_location = None
        delivery_address = None
        neftebaza_location = None
        if delivery_method == "—Å–∞–º–æ–≤—ã–≤–æ–∑":
            st.markdown("#### üìç –í—ã–±–æ—Ä –±–∞–∑–∏—Å–∞ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞")
            if locations:
                pickup_location = st.selectbox(
                    "–ë–∞–∑–∏—Å",
                    options=list(locations.keys()),
                    format_func=str.upper,
                )
            else:
                st.error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –±–∞–∑–∏—Å—ã –≤ —Ñ–∞–π–ª–µ locations.json")
        elif delivery_method == "–Ω–µ—Ñ—Ç–µ–±–∞–∑–∞":
            st.markdown("#### üõ¢Ô∏è –í—ã–±–æ—Ä –Ω–µ—Ñ—Ç–µ–±–∞–∑—ã")
            if neftebazy:
                neftebaza_location = st.selectbox(
                    "–ù–µ—Ñ—Ç–µ–±–∞–∑–∞",
                    options=list(neftebazy.keys()),
                    format_func=str.upper,
                )
            else:
                st.error("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ—Ñ—Ç–µ–±–∞–∑—ã –≤ —Ñ–∞–π–ª–µ nb.json")
        else:
            st.markdown("#### üè† –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
            delivery_address = st.text_input(
                "–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –≥. –ö–∞–∑–∞–Ω—å, —É–ª. –ê–±—Å–∞–ª—è–º–æ–≤–∞, 19"
            )
        st.markdown("### üìù –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö")
        col3, col4 = st.columns(2)
        with col3:
            comp_input = st.text_input(
                "–ö–æ–º–ø–∞–Ω–∏—è, –Ω–æ–º–µ—Ä –î–°",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¥–µ–∫–æ,212",
                help="–§–æ—Ä–º–∞—Ç: –∫–æ–º–ø–∞–Ω–∏—è,–Ω–æ–º–µ—Ä_–¥—Å"
            )
        with col4:
            prod_input = st.text_input(
                "–ü—Ä–æ–¥—É–∫—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, —Ü–µ–Ω–∞",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¥—Ç–ª,25,60500",
                help="–§–æ—Ä–º–∞—Ç: —Ç–æ–≤–∞—Ä,–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ,—Ü–µ–Ω–∞"
            )
        # –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if st.button("üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", type="primary"):
            # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –≤–≤–æ–¥
            if not comp_input or not prod_input:
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")
            elif delivery_method == "–¥–æ—Å—Ç–∞–≤–∫–∞" and (not delivery_address or not delivery_address.strip()):
                st.error("–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
            elif delivery_method == "—Å–∞–º–æ–≤—ã–≤–æ–∑" and not pickup_location:
                st.error("–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–∑–∏—Å –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞")
            elif delivery_method == "–Ω–µ—Ñ—Ç–µ–±–∞–∑–∞" and not neftebaza_location:
                st.error("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ—Ñ—Ç–µ–±–∞–∑—É")
            else:
                try:
                    comp_parts = [p.strip() for p in comp_input.split(',')]
                    prod_parts = [p.strip() for p in prod_input.split(',')]
                    if len(comp_parts) != 2:
                        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–ø–∞–Ω–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –∫–æ–º–ø–∞–Ω–∏—è,–Ω–æ–º–µ—Ä")
                    elif len(prod_parts) != 3:
                        st.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø—Ä–æ–¥—É–∫—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: –ø—Ä–æ–¥—É–∫—Ç,–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ,—Ü–µ–Ω–∞")
                    else:
                        client_key, dop_num = comp_parts
                        product_key, tons_str, price_str = prod_parts
                        with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞..."):
                            docx_data, _, filename_base, err = generate_document(
                                dop_num=dop_num,
                                client_key=client_key,
                                product_key=product_key,
                                price_str=price_str,
                                tons_str=tons_str,
                                pay_date=pay_date,
                                delivery_method=delivery_method,
                                pickup_location=pickup_location,
                                delivery_address=delivery_address,
                                neftebaza_location=neftebaza_location,
                                document_type=document_type,
                                base_dir=None
                            )
                        if err:
                            st.error(err)
                        else:
                            st.success("–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                            if docx_data:
                                st.download_button(
                                    label="‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å DOC",
                                    data=docx_data,
                                    file_name=f"{filename_base}.doc",
                                    mime="application/msword",
                                )
                            st.info(f"–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_method}")
                            if delivery_method == "—Å–∞–º–æ–≤—ã–≤–æ–∑":
                                st.info(f"–ë–∞–∑–∏—Å: {pickup_location}")
                            elif delivery_method == "–Ω–µ—Ñ—Ç–µ–±–∞–∑–∞":
                                st.info(f"–ù–µ—Ñ—Ç–µ–±–∞–∑–∞: {neftebaza_location}")
                            else:
                                st.info(f"–ê–¥—Ä–µ—Å: {delivery_address}")
                            st.info(f"–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã: {pay_date.strftime('%d.%m.%Y')}")
                            st.info(f"–ò–º—è —Ñ–∞–π–ª–∞: {filename_base}.doc")
                except Exception as exc:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {exc}")
    # –í–∫–ª–∞–¥–∫–∞ –¥–∞—à–±–æ—Ä–¥
    with tab_dash:
        # –ü–µ—Ä–µ–¥–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–π Google Sheets. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å None,
        # —Ç–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞.
        display_dashboard(sheet_id="1dmVVn25GQNCcCSJeh3xGx1Aics-C1PCwaYyIPgkFVKA")


def main() -> None:
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    run_app()


if __name__ == "__main__":
    main()